<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangsong.system.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.wangsong.system.model.Product">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="access" jdbcType="VARCHAR" property="access"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from system_product
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.wangsong.system.model.Product">
        insert into system_product (code, name,
        type,access)
        values ( #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{access,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.wangsong.system.model.Product">
        update system_product
        set code = #{code,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        access = #{access,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, code, name, type,access
        from system_product
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, code, name, type,access
        from system_product
    </select>



    <select id="findTByPage" parameterType="com.wangsong.system.model.ProductPage" resultMap="BaseResultMap">
        select id, code, name, type, access
        from system_product
        where 1=1
        <if test="name!= null and name != ''">
            and name like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
        </if>
        <if test="type != null and type != ''">
            and type like CONCAT ('%',#{type,jdbcType=VARCHAR},'%')
        </if>
        ORDER BY type
    </select>
    <delete id="deleteBy">
        delete from system_product
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="findTByT" parameterType="com.wangsong.system.model.Product" resultMap="BaseResultMap">
        select id, code, name, type,access
        from system_product
        where type = #{type,jdbcType=VARCHAR}
    </select>
</mapper>